#load the data file
load("~/stat133/stat133-hws-fall17/hw01/data/nba2017-salary-points.RData")
#list the available objects
ls()
#load the data file
load("~/stat133/stat133-hws-fall17/hw01/data/nba2017-salary-points.RData")
#list the available objects
ls()
#Salary in Millions
sal_millions <-  round(salary/(10^6), digit = 2)
sal_millions
#Replace R with 0
exp <- replace(experience, experience == 'R', 0)
exp_int <- as.integer(exp)
exp_int
typeof(exp_int)
getwd()
cd ..
setwd(~/stat133/stat133-hws-fall17/hw03/data)
?join
library(dplyr)
library(ggplot2)
library(readr)
ggplot(data = teams, aes(x = experience, y = salary, col = team)) +
geom_point() +
labs(title = "Salary vs Experience")
ggplot(teams, aes(x = experience, y = salary, col = team)) +
geom_point() +
labs(title = "Salary vs Experience")
library(dplyr)
library(ggplot2)
setwd("~/stat133/stat133-hws-fall17/hw03")
setwd("~/stat133/stat133-hws-fall17/hw03")
source('~/stat133/stat133-hws-fall17/hw03/code/make-teams-table.R', echo=TRUE)
source('~/stat133/stat133-hws-fall17/hw03/code/make-teams-table.R', echo=TRUE)
source('~/stat133/stat133-hws-fall17/hw03/code/make-teams-table.R', echo=TRUE)
source('~/stat133/stat133-hws-fall17/hw03/code/make-teams-table.R', echo=TRUE)
source('~/stat133/stat133-hws-fall17/hw03/code/make-teams-table.R', echo=TRUE)
source('~/stat133/stat133-hws-fall17/hw03/code/make-teams-table.R', echo=TRUE)
source('~/stat133/stat133-hws-fall17/hw03/code/make-teams-table.R', echo=TRUE)
source('~/stat133/stat133-hws-fall17/hw03/code/make-teams-table.R', echo=TRUE)
source('~/stat133/stat133-hws-fall17/hw03/code/make-teams-table.R', echo=TRUE)
source('~/stat133/stat133-hws-fall17/hw03/code/make-teams-table.R', echo=TRUE)
source('~/stat133/stat133-hws-fall17/hw03/code/make-teams-table.R', echo=TRUE)
install.packages(scales)
library(dplyr)
library(ggplot2)
library(readr)
library(scales)
dat <- read.csv('~/stat133/stat133-hws-fall17/hw03/data/nba2017-teams.csv')
pca_stats <- dat %>%
select(points3_made, points2_made, points1_made, off_rebounds,
def_rebounds, assists, steals, blocks, turnovers, fouls)
pca <- prcomp(pca_stats, scale. = TRUE)
eigenvalue = pca$sdev^2
prop = round(eigenvalue/sum(eigenvalue), 4)
cumprop = round(cumsum(prop), 4)
eig <- data.frame(eigenvalue = eigenvalue,
prop = prop,
cumprop = cumprop
)
eig
pc1 <- pca_stats$x[ ,1]
pc2 <- pca_stats$x[ ,2]
dat1 <- data.frame(pc1 = pca_stats$x[ ,1], pc2 = pca_stats$x[ ,2])
#Scatterplot
ggplot(dat1, aes(x = pc1, y = pc2)) +
geom_point() +
labs(title = "PCA plot (PC1 and PC2)", x = pc1, y = pc2) +
geom_text(aes(label = dat1$team)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0)
#Index Based on PC1
s1 <- 100 * ((pc1 - min(pc1))/(max(pc1) - min(pc1)))
dat2 <- data.frame(dat$team, s1)
pca_stats <- dat %>%
select(points3_made, points2_made, points1_made, off_rebounds,
def_rebounds, assists, steals, blocks, turnovers, fouls)
pca <- prcomp(pca_stats, scale. = TRUE)
eigenvalue = pca$sdev^2
prop = round(eigenvalue/sum(eigenvalue), 4)
cumprop = round(cumsum(prop), 4)
eig <- data.frame(eigenvalue = eigenvalue,
prop = prop,
cumprop = cumprop
)
eig
pc1 <- pca$x[ ,1]
pc2 <- pca$x[ ,2]
dat1 <- data.frame(pc1 = pca_stats$x[ ,1], pc2 = pca_stats$x[ ,2])
#Scatterplot
ggplot(dat1, aes(x = pc1, y = pc2)) +
geom_point() +
labs(title = "PCA plot (PC1 and PC2)", x = pc1, y = pc2) +
geom_text(aes(label = dat1$team)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0)
pca_stats <- dat %>%
select(points3_made, points2_made, points1_made, off_rebounds,
def_rebounds, assists, steals, blocks, turnovers, fouls)
pca <- prcomp(pca_stats, scale. = TRUE)
eigenvalue = pca$sdev^2
prop = round(eigenvalue/sum(eigenvalue), 4)
cumprop = round(cumsum(prop), 4)
eig <- data.frame(eigenvalue = eigenvalue,
prop = prop,
cumprop = cumprop
)
eig
pc1 <- pca$x[ ,1]
pc2 <- pca$x[ ,2]
dat1 <- data.frame(pc1 = pca$x[ ,1], pc2 = pca$x[ ,2])
#Scatterplot
ggplot(dat1, aes(x = pc1, y = pc2)) +
geom_point() +
labs(title = "PCA plot (PC1 and PC2)", x = pc1, y = pc2) +
geom_text(aes(label = dat1$team)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0)
pca_stats <- dat %>%
select(points3_made, points2_made, points1_made, off_rebounds,
def_rebounds, assists, steals, blocks, turnovers, fouls)
pca <- prcomp(pca_stats, scale. = TRUE)
eigenvalue = pca$sdev^2
prop = round(eigenvalue/sum(eigenvalue), 4)
cumprop = round(cumsum(prop), 4)
eig <- data.frame(eigenvalue = eigenvalue,
prop = prop,
cumprop = cumprop
)
eig
pc1 <- pca$x[ ,1]
pc2 <- pca$x[ ,2]
dat1 <- data.frame(pc1 = pca$x[ ,1], pc2 = pca$x[ ,2])
#Scatterplot
ggplot(dat1, aes(x = pc1, y = pc2)) +
geom_point() +
labs(title = "PCA plot (PC1 and PC2)", x = PC1, y = PC2) +
geom_text(aes(label = dat1$team))
pca_stats <- dat %>%
select(points3_made, points2_made, points1_made, off_rebounds,
def_rebounds, assists, steals, blocks, turnovers, fouls)
pca <- prcomp(pca_stats, scale. = TRUE)
eigenvalue = pca$sdev^2
prop = round(eigenvalue/sum(eigenvalue), 4)
cumprop = round(cumsum(prop), 4)
eig <- data.frame(eigenvalue = eigenvalue,
prop = prop,
cumprop = cumprop
)
eig
dat1 <- data.frame(pc1 = pca$x[ ,1], pc2 = pca$x[ ,2])
#Scatterplot
ggplot(dat1, aes(x = pc1, y = pc2)) +
geom_point() +
labs(title = "PCA plot (PC1 and PC2)", x = PC1, y = PC2) +
geom_text(aes(label = dat1$team))
pca_stats <- dat %>%
select(points3_made, points2_made, points1_made, off_rebounds,
def_rebounds, assists, steals, blocks, turnovers, fouls)
pca <- prcomp(pca_stats, scale. = TRUE)
eigenvalue = pca$sdev^2
prop = round(eigenvalue/sum(eigenvalue), 4)
cumprop = round(cumsum(prop), 4)
eig <- data.frame(eigenvalue = eigenvalue,
prop = prop,
cumprop = cumprop
)
eig
pc1 <- pca$x[ ,1]
pc2 <- pca$x[ ,2]
dat1 <- data.frame(pc1 = pca$x[ ,1], pc2 = pca$x[ ,2])
#Scatterplot
ggplot(dat1, aes(x = pc1, y = pc2)) +
geom_point() +
labs(title = "PCA plot (PC1 and PC2)", x = "PC1", y = "PC2") +
geom_text(aes(label = dat1$team)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0)
pca_stats <- dat %>%
select(points3_made, points2_made, points1_made, off_rebounds,
def_rebounds, assists, steals, blocks, turnovers, fouls)
pca <- prcomp(pca_stats, scale. = TRUE)
eigenvalue = pca$sdev^2
prop = round(eigenvalue/sum(eigenvalue), 4)
cumprop = round(cumsum(prop), 4)
eig <- data.frame(eigenvalue = eigenvalue,
prop = prop,
cumprop = cumprop
)
eig
pc1 <- pca$x[ ,1]
pc2 <- pca$x[ ,2]
dat1 <- data.frame(pc1 = pca$x[ ,1], pc2 = pca$x[ ,2])
#Scatterplot
ggplot(dat1, aes(x = -pc1, y = pc2)) +
geom_point() +
labs(title = "PCA plot (PC1 and PC2)", x = "PC1", y = "PC2") +
geom_text(aes(label = dat1$team)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0)
pca_stats <- dat %>%
select(points3_made, points2_made, points1_made, off_rebounds,
def_rebounds, assists, steals, blocks, turnovers, fouls)
pca <- prcomp(pca_stats, scale. = TRUE)
eigenvalue = pca$sdev^2
prop = round(eigenvalue/sum(eigenvalue), 4)
cumprop = round(cumsum(prop), 4)
eig <- data.frame(eigenvalue = eigenvalue,
prop = prop,
cumprop = cumprop
)
eig
pc1 <- pca$x[ ,1]
pc2 <- pca$x[ ,2]
dat$pc1 <- pc1
dat$pc2 <- pc2
#Scatterplot
ggplot(dat, aes(x = pc1, y = pc2)) +
geom_point() +
labs(title = "PCA plot (PC1 and PC2)", x = "PC1", y = "PC2") +
geom_text(aes(label = dat$team)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0)
#Index Based on PC1
s1 <- 100 * ((pc1 - min(pc1))/(max(pc1) - min(pc1)))
dat$s1 <- s1
#barplot of PC1
ggplot(dat, aes(reorder(team, s1), s1)) +
labs(title = "NBA Teams ranked by scaled PC1", x = "Team", y = "First PC (scaled from 0 to 100") +
geom_bar(stat = 'identity') +
coord_flip() +
geom_hline(yintercept = mean(dat$s1))

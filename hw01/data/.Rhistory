main = "Histogram of Efficiency", col= "blue")
# Top 10 by decreasing EFF
top_ten <- dat1[order(-dat1$EFF),] [1:10,c("Player", "Team", "Salary","EFF")]
top_ten
# Negative EFF players
filter(dat1, EFF < 0)
# Use the function cor() to compute the correlation coefficients between EFF and all the variables used in the EFF formula
PTS = cor(dat1$EFF, dat1$PTS)
REB = cor(dat1$EFF, dat1$REB)
AST = cor(dat1$EFF, dat1$AST)
STL = cor(dat1$EFF, dat1$STL)
BLK = cor(dat1$EFF, dat1$BLK)
Missed_FG = cor(dat1$EFF, -dat1$Missed_FG)
Missed_FT = cor(dat1$EFF, -dat1$Missed_FT)
TO = cor(dat1$EFF, dat1$TO)
GP = cor(dat1$EFF, dat1$GP)
# Correlation Between Player Stats and EFF
correlation = c(PTS = cor(dat1$EFF, dat1$PTS),
REB = cor(dat1$EFF, dat1$REB),
AST = cor(dat1$EFF, dat1$AST),
STL = cor(dat1$EFF, dat1$STL),
BLK = cor(dat1$EFF, dat1$BLK),
Missed_FG = -cor(dat1$EFF, dat1$Missed_FG),
Missed_FT = -cor(dat1$EFF, dat1$Missed_FT),
TO = -cor(dat1$EFF, dat1$TO),
GP = cor(dat1$EFF, dat1$GP))
sorted_correlation = sort(correlation, decreasing = TRUE)
barplot(sorted_cor, main = 'Correlation between Player Statistics and EFF')
hist(dat1$EFF, xlab = "EFF", ylab = "Frequency",
main = "Histogram of Efficiency", col= "blue")
# Top 10 by decreasing EFF
top_ten <- dat1[order(-dat1$EFF),] [1:10,c("Player", "Team", "Salary","EFF")]
top_ten
# Negative EFF players
filter(dat1, EFF < 0)
# Use the function cor() to compute the correlation coefficients between EFF and all the variables used in the EFF formula
PTS = cor(dat1$EFF, dat1$PTS)
REB = cor(dat1$EFF, dat1$REB)
AST = cor(dat1$EFF, dat1$AST)
STL = cor(dat1$EFF, dat1$STL)
BLK = cor(dat1$EFF, dat1$BLK)
Missed_FG = cor(dat1$EFF, -dat1$Missed_FG)
Missed_FT = cor(dat1$EFF, -dat1$Missed_FT)
TO = cor(dat1$EFF, dat1$TO)
GP = cor(dat1$EFF, dat1$GP)
# Correlation Between Player Stats and EFF
correlation = c(PTS = cor(dat1$EFF, dat1$PTS),
REB = cor(dat1$EFF, dat1$REB),
AST = cor(dat1$EFF, dat1$AST),
STL = cor(dat1$EFF, dat1$STL),
BLK = cor(dat1$EFF, dat1$BLK),
Missed_FG = -cor(dat1$EFF, dat1$Missed_FG),
Missed_FT = -cor(dat1$EFF, dat1$Missed_FT),
TO = -cor(dat1$EFF, dat1$TO),
GP = cor(dat1$EFF, dat1$GP))
sorted_correlation = sort(correlation, decreasing = TRUE)
barplot(sorted_correlation, main = 'Correlation between Player Statistics and EFF')
hist(dat1$EFF, xlab = "EFF", ylab = "Frequency",
main = "Histogram of Efficiency", col= "blue")
# Top 10 by decreasing EFF
top_ten <- dat1[order(-dat1$EFF),] [1:10,c("Player", "Team", "Salary","EFF")]
top_ten
# Negative EFF players
filter(dat1, EFF < 0)
# Use the function cor() to compute the correlation coefficients between EFF and all the variables used in the EFF formula
PTS = cor(dat1$EFF, dat1$PTS)
REB = cor(dat1$EFF, dat1$REB)
AST = cor(dat1$EFF, dat1$AST)
STL = cor(dat1$EFF, dat1$STL)
BLK = cor(dat1$EFF, dat1$BLK)
Missed_FG = cor(dat1$EFF, -dat1$Missed_FG)
Missed_FT = cor(dat1$EFF, -dat1$Missed_FT)
TO = cor(dat1$EFF, dat1$TO)
GP = cor(dat1$EFF, dat1$GP)
# Correlation Between Player Stats and EFF
correlation = c(PTS = cor(dat1$EFF, dat1$PTS),
REB = cor(dat1$EFF, dat1$REB),
AST = cor(dat1$EFF, dat1$AST),
STL = cor(dat1$EFF, dat1$STL),
BLK = cor(dat1$EFF, dat1$BLK),
Missed_FG = -cor(dat1$EFF, dat1$Missed_FG),
Missed_FT = -cor(dat1$EFF, dat1$Missed_FT),
TO = -cor(dat1$EFF, dat1$TO),
GP = cor(dat1$EFF, dat1$GP))
sorted_correlation = sort(correlation, decreasing = TRUE)
barplot(sorted_correlation, main = 'Correlation between Player Statistics and EFF', cex.names = .60)
hist(dat1$EFF, xlab = "EFF", ylab = "Frequency",
main = "Histogram of Efficiency", col= "blue")
# Top 10 by decreasing EFF
top_ten <- dat1[order(-dat1$EFF),] [1:10,c("Player", "Team", "Salary","EFF")]
top_ten
# Negative EFF players
filter(dat1, EFF < 0)
# Use the function cor() to compute the correlation coefficients between EFF and all the variables used in the EFF formula
PTS = cor(dat1$EFF, dat1$PTS)
REB = cor(dat1$EFF, dat1$REB)
AST = cor(dat1$EFF, dat1$AST)
STL = cor(dat1$EFF, dat1$STL)
BLK = cor(dat1$EFF, dat1$BLK)
Missed_FG = cor(dat1$EFF, -dat1$Missed_FG)
Missed_FT = cor(dat1$EFF, -dat1$Missed_FT)
TO = cor(dat1$EFF, dat1$TO)
GP = cor(dat1$EFF, dat1$GP)
# Correlation Between Player Stats and EFF
correlation = c(PTS = cor(dat1$EFF, dat1$PTS),
REB = cor(dat1$EFF, dat1$REB),
AST = cor(dat1$EFF, dat1$AST),
STL = cor(dat1$EFF, dat1$STL),
BLK = cor(dat1$EFF, dat1$BLK),
Missed_FG = -cor(dat1$EFF, dat1$Missed_FG),
Missed_FT = -cor(dat1$EFF, dat1$Missed_FT),
TO = -cor(dat1$EFF, dat1$TO),
GP = cor(dat1$EFF, dat1$GP))
sorted_correlation = sort(correlation, decreasing = TRUE)
barplot(sorted_correlation, main = 'Correlation between Player Stats and EFF', cex.names = .60)
#Scatterplot
plot(dat1$EFF, dat1$Salary, cex.names = .8, xlab = "Efficiency", ylab =  "Salary (in Millions)")
#Scatterplot
plot(dat1$EFF, dat1$Salary, cex = .8, xlab = "Efficiency", ylab =  "Salary (in Millions)")
#Scatterplot
plot(dat1$EFF, dat1$Salary, xlab = "Efficiency", ylab =  "Salary (in Millions)")
#Scatterplot
plot(dat1$EFF, dat1$Salary, main = "Efficiency and Salary", xlab = "Efficiency", ylab =  "Salary (in Millions)")
#Scatterplot
plot(dat1$EFF, dat1$Salary, main = "Efficiency and Salary", xlab = "Efficiency", ylab =  "Salary (in Millions)")
lines(lowess(dat1$EFF, dat1$Salary), col = 'red')
cor(dat1$EFF, dat1$Salary)
#Scatterplot
plot(dat1$EFF, dat1$Salary, main = "Efficiency and Salary", xlab = "Efficiency", ylab =  "Salary (in Millions)")
lines(lowess(dat1$EFF, dat1$Salary), col = 'red')
#Correlation
cor(dat1$EFF, dat1$Salary)
#There is a positive correlation between player efficiency and salary
#Player Data Frame
players2 <- dat1[dat1$MPG > 20]
#Scatterplot
plot(dat1$EFF, dat1$Salary, main = "Efficiency and Salary", xlab = "Efficiency", ylab =  "Salary (in Millions)")
lines(lowess(dat1$EFF, dat1$Salary), col = 'red')
#Correlation
cor(dat1$EFF, dat1$Salary)
#There is a positive correlation between player efficiency and salary
#Player Data Frame
players2 <- dat[dat1$MPG > 20]
#Scatterplot
plot(dat1$EFF, dat1$Salary, main = "Efficiency and Salary", xlab = "Efficiency", ylab =  "Salary (in Millions)")
lines(lowess(dat1$EFF, dat1$Salary), col = 'red')
#Correlation
cor(dat1$EFF, dat1$Salary)
#There is a positive correlation between player efficiency and salary
#Player Data Frame
players2 = dat1[dat1$MPG > 20]
dat1$Missed_FG <- dat1$FGA - dat1$FGM
dat1$Missed_FT <- dat1$FTA - dat1$FTM
dat1$PTS <- (dat1$Points3 *3 ) + (dat1$Points2 * 2) + dat1$FTM
dat1$REB <- dat1$OREB + dat1$DREB
dat1$MPG <- (dat1$MIN / dat1$GP)
dat1$EFF <- ((dat1$PTS + dat1$REB + dat1$AST +
dat1$STL+ dat1$BLK - dat1$Missed_FG -
dat1$Missed_FT - dat1$TO) / dat1$GP)
dat1
#Scatterplot
plot(dat1$EFF, dat1$Salary, main = "Efficiency and Salary", xlab = "Efficiency", ylab =  "Salary (in Millions)")
lines(lowess(dat1$EFF, dat1$Salary), col = 'red')
#Correlation
cor(dat1$EFF, dat1$Salary)
#There is a positive correlation between player efficiency and salary
#Player Data Frame
players2 = dat1[dat1$MPG >= 20]
#Scatterplot
plot(dat1$EFF, dat1$Salary, main = "Efficiency and Salary", xlab = "Efficiency", ylab =  "Salary (in Millions)")
lines(lowess(dat1$EFF, dat1$Salary), col = 'red')
#Correlation
cor(dat1$EFF, dat1$Salary)
#There is a positive correlation between player efficiency and salary
dat1
#Player Data Frame
players2 = dat1[dat1$MPG >= 20]
#Scatterplot
plot(dat1$EFF, dat1$Salary, main = "Efficiency and Salary", xlab = "Efficiency", ylab =  "Salary (in Millions)")
lines(lowess(dat1$EFF, dat1$Salary), col = 'red')
#Correlation
cor(dat1$EFF, dat1$Salary)
#There is a positive correlation between player efficiency and salary
#Player Data Frame
players2 <-  dat1[dat1$MPG > 20]
#Scatterplot
plot(dat1$EFF, dat1$Salary, main = "Efficiency and Salary", xlab = "Efficiency", ylab =  "Salary (in Millions)")
lines(lowess(dat1$EFF, dat1$Salary), col = 'red')
#Correlation
cor(dat1$EFF, dat1$Salary)
#There is a positive correlation between player efficiency and salary
#Player Data Frame
players2 <- dat1[dat1$MPG > 20,]
#Scatterplot
plot(players2$EFF, players2$Salary, main = "Efficiency and Salary in More Established Players", xlab = "Efficiency", ylab = "Salary (in Millions)")
lines(lowess(players2$EFF, players2$Salary), col = 'red')
cor(players2$EFF, players2$Salary)
#Scatterplot
plot(dat1$EFF, dat1$Salary, main = "Efficiency and Salary", xlab = "Efficiency", ylab =  "Salary (in Millions)")
lines(lowess(dat1$EFF, dat1$Salary), col = 'red')
#Correlation
cor(dat1$EFF, dat1$Salary)
#There is a positive correlation between player efficiency and salary
#Player Data Frame
players2 <- dat1[dat1$MPG > 20]
#Scatterplot
plot(dat1$EFF, dat1$Salary, main = "Efficiency and Salary", xlab = "Efficiency", ylab =  "Salary (in Millions)")
lines(lowess(dat1$EFF, dat1$Salary), col = 'red')
#Correlation
cor(dat1$EFF, dat1$Salary)
#There is a positive correlation between player efficiency and salary
#Player Data Frame
players2 <- dat1[dat1$MPG > 20,]
#Scatterplot
plot(players2$EFF, players2$Salary, main = "Efficiency and Salary in More Established Players", xlab = "Efficiency", ylab = "Salary (in Millions)")
lines(lowess(players2$EFF, players2$Salary), col = 'red')
cor(players2$EFF, players2$Salary)
getwd()
setwd(~/stat133/stat133-hws-fall17/hw01/data)
setwd("~/stat133/stat133-hws-fall17/hw01/data")
#load the data file
load("~/stat133/stat133-hws-fall17/hw01/data/nba2017-salary-points.RData")
#load the data file
load("~/stat133/stat133-hws-fall17/hw01/data/nba2017-salary-points.RData")
#list the available objects
ls()
#Salary in Millions
sal_millions <-  round(Salary/(10^6), digit = 2)
#Salary in Millions
sal_millions <-  round(salary/(10^6), digit = 2)
sal_millions
#Replace R with 0
exp <- replace(experience, experience == 'R'), 0)
#Salary in Millions
sal_millions <-  round(salary/(10^6), digit = 2)
sal_millions
#Replace R with 0
exp <- replace(experience, experience == 'R', 0)
exp_int <- as.integer(exp)
exp_int
typeof(exp_int)
pos_factor <- factor(position, labels = c("center", "small_fwd", "power_fwd", "shoot_guard", "point_guard"))
table(pos_factor)
?par
plot(points, sal_millions, xlab = "Points", ylab = "Salary (in Millions)", main = "Points and Salary")
# number of individuals
n = 441
# mean of variable X (points)
mean_x = sum(points)/n
mean_x
# mean of variable Y (salary)
mean_y = sum(salary_millions)/n
# number of individuals
n = 441
# mean of variable X (points)
mean_x = sum(points)/n
mean_x
# mean of variable Y (salary)
mean_y = sum(sal_millions)/n
mean_y
# var(X): variance of X
var_x = sum((points - mean_x)^2)/(n-1)
var_x
# var(Y): variance of y
var_y = sum((sal_millions - mean_y)^2)/(n-1)
var_y
# sd(X): standard deviation of X
sd_x = sqrt(var_x)
sd_x
#sd(Y): standard deviation of Y
sd_y = sqrt(var_y)
sd_y
#cov(X,Y): covariance between X and Y
cov_xy = sum((points - mean_x) * (sal_millions - mean_y)) / (n - 1)
cov_xy
#cor(X,Y): correlation between X  and Y
cor_xy = cov_xy/(sd_x * sd_y)
cor_xy
cor(points, salary)
b1 = round(cor_xy * (sd_y / sd_x), digit = 3)
b1
b0 = round(mean_y - (b1 * mean_x), digit = 3)
b0
Y = b0 + b1 * points
summary(Y)
Y_0 = b0 + b1 * 0
Y_100 = b0 + b1 * 100
Y_500 = b0 + b1 * 500
Y_1000 = b0 + b1 * 1000
Y_5000 = b0 + b1 * 2000
b1 = round(cor_xy * (sd_y / sd_x), digit = 3)
b1
b0 = round(mean_y - (b1 * mean_x), digit = 3)
b0
Y = b0 + b1 * points
summary(Y)
Y_0 = b0 + b1 * 0
Y_0
Y_100 = b0 + b1 * 100
Y_100
Y_500 = b0 + b1 * 500
Y_500
Y_1000 = b0 + b1 * 1000
Y_1000
Y_5000 = b0 + b1 * 2000
Y_1000
b1 = round(cor_xy * (sd_y / sd_x), digit = 3)
b1
b0 = round(mean_y - (b1 * mean_x), digit = 3)
b0
Y = b0 + b1 * points
summary(Y)
Y_0 = b0 + b1 * 0
Y_0
Y_100 = b0 + b1 * 100
Y_100
Y_500 = b0 + b1 * 500
Y_500
Y_1000 = b0 + b1 * 1000
Y_1000
Y_5000 = b0 + b1 * 2000
Y_5000
b1 = round(cor_xy * (sd_y / sd_x), digit = 3)
b1
b0 = round(mean_y - (b1 * mean_x), digit = 3)
b0
Y = b0 + b1 * points
summary(Y)
Y_0 = b0 + b1 * 0
Y_0
Y_100 = b0 + b1 * 100
Y_100
Y_500 = b0 + b1 * 500
Y_500
Y_1000 = b0 + b1 * 1000
Y_1000
Y_5000 = b0 + b1 * 2000
Y_5000 * r
b1 = round(cor_xy * (sd_y / sd_x), digit = 3)
b1
b0 = round(mean_y - (b1 * mean_x), digit = 3)
b0
Y = b0 + b1 * points
summary(Y)
b0 + b1 * 0
Y_100 = b0 + b1 * 100
Y_100
Y_500 = b0 + b1 * 500
Y_500
Y_1000 = b0 + b1 * 1000
Y_1000
Y_5000 = b0 + b1 * 2000
Y_5000
b1 = round(cor_xy * (sd_y / sd_x), digit = 3)
b1
b0 = round(mean_y - (b1 * mean_x), digit = 3)
b0
Y = b0 + (b1 * points)
summary(Y)
b0 + b1 * 0
Y_100 = b0 + b1 * 100
Y_100
Y_500 = b0 + b1 * 500
Y_500
Y_1000 = b0 + b1 * 1000
Y_1000
Y_5000 = b0 + b1 * 2000
Y_5000
b1 = round(cor_xy * (sd_y / sd_x), digit = 3)
b1
b0 = round(mean_y - (b1 * mean_x), digit = 3)
b0
Y = b0 + (b1 * points)
summary(Y)
b0 + b1 * 0
Y_100 = b0 + (b1 * 100)
Y_100
Y_500 = b0 + b1 * 500
Y_500
Y_1000 = b0 + b1 * 1000
Y_1000
Y_5000 = b0 + b1 * 2000
Y_5000
b1 = round(cor_xy * (sd_y / sd_x), digit = 3)
b1
b0 = round(mean_y - (b1 * mean_x), digit = 3)
b0
Y = b0 + (b1 * points)
summary(Y)
b0 + b1 * 0
Y_100 <-  b0 + (b1 * 100)
Y_100
Y_500 = b0 + b1 * 500
Y_500
Y_1000 = b0 + b1 * 1000
Y_1000
Y_5000 = b0 + b1 * 2000
Y_5000
plot(points, sal_millions, xlab = "Points", ylab = "Salary in Millions", main "Points and Salary")
plot(points, sal_millions, xlab = "Points", ylab = "Salary in Millions", main = "Points and Salary")
lines(lowess(points, sal_millions), col = "red")
abline(a = b0, b = b1, col = "blue", lwd = 1.5)
text(2300, 30, "lowess", col= "red")
text(2300, 17, "regression", col = "blue")
#Vector of Residuals
summary(sal_millions - Y)
#
#Vector of Residuals
summary(sal_millions - Y)
# Residual Sum of Squares
rss <-sum((sal_millions - Y)^2)
rss
#Vector of Residuals
summary(sal_millions - Y)
# Residual Sum of Squares
rss <- sum((sal_millions - Y)^2)
rss
#Total Sum of Squares
tss <- sum((sal_millions - mean_y)^2)
tss
#Coefficient of Determination
r2 <- 1 - (rss/tss)
r2
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
library(scatterplot3d)
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
library("scatterplot3d")
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
library("scatterplot3d")
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
library("scatterplot3d")
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
library("scatterplot3d")
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
library('scatterplot3d')
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
library(scatterplot3d)
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
library("scatterplot3d")
install.packages
install.packages(scatterplot3d)
install.packages('scatterplot3d'')
library(scatterplot3d)
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
library("scatterplot3d")
scatterplot3d(points, exp, sal_millions, zlab = "Salary", ylab = "Experience", main = "3D Scatterplot")
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
library("scatterplot3d")
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
scatterplot3d(points, exp, sal_millions, xlab = "points", zlab = "Salary", ylab = "Experience", main = "3D Scatterplot")
install.packages(`scatterplot3d`)
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
require(scatterplot3d)
scatterplot3d(points, exp, sal_millions, xlab = "points", zlab = "Salary", ylab = "Experience", main = "3D Scatterplot")
install.packages(scatterplot3d)
install.packages('scatterplot3d')
library(scatterplot3d)
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
scatterplot3d(points, exp, sal_millions, xlab = "points", zlab = "Salary", ylab = "Experience", main = "3D Scatterplot")
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
scatterplot3d(points, exp, sal_millions, xlab = "points", zlab = "Salary", ylab = "Experience", main = "3D Scatterplot")
#Boxplot
boxplot(sal_millions ~ position, xlab = "Position", ylab = "Salary in millions", main = "Boxplot of Salary")
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
libary('scatterplot3d')
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
library('scatterplot3d')
scatterplot3d(points, exp, sal_millions, xlab = "points", zlab = "Salary", ylab = "Experience", main = "3D Scatterplot")
#Boxplot
boxplot(sal_millions ~ position, xlab = "Position", ylab = "Salary in millions", main = "Boxplot of Salary")
#Scatterplot of Experience and Salary
plot(experience, sal_millions, xlab = "Years of Experience", ylab = "Salary", main = "Experience and Salary")
lines(lowess(exp, sal_millions), col = "red")
library('scatterplot3d')
scatterplot3d(points, exp, sal_millions, xlab = "points", zlab = "Salary", ylab = "Experience", main = "3D Scatterplot")
#Boxplot
boxplot(sal_millions ~ position, xlab = "Position", ylab = "Salary in millions", main = "Boxplot of Salary")
